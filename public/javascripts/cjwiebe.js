// Generated by CoffeeScript 1.4.0
(function() {
  var App, Circle, Experience, LoadingCircles;

  window.LoadingCircles = LoadingCircles = (function() {

    function LoadingCircles() {
      var _this = this;
      this._self = $("loadingCircle");
      this.circles = [];
      this.intervals = [];
      this.timeouts = [];
      this.circleDoms = this._self.childElements().grep(new Selector(".circle"));
      this.circleDoms.each(function(circle) {
        return _this.circles.push(new Circle(circle));
      });
    }

    LoadingCircles.prototype.animate = function() {
      var context, f, interval, stagger,
        _this = this;
      stagger = 400;
      interval = 2000;
      context = this;
      f = function() {
        return _this.circles.each(function(circle, i) {
          var t;
          t = function() {
            circle.show();
            return circle.animate();
          };
          return _this.timeouts.push(setTimeout(t, stagger * i));
        });
      };
      f();
      return this.intervals.push(setInterval(f, interval));
    };

    LoadingCircles.prototype.hide = function() {
      this.circles.each(function(circle) {
        return circle.hide();
      });
      this.timeouts.each(function(timeout) {
        return clearTimeout(timeout);
      });
      this.timeouts = [];
      return clearInterval(this.intervals.pop());
    };

    return LoadingCircles;

  })();

  window.Circle = Circle = (function() {

    function Circle(elem) {
      this._self = $(elem);
    }

    Circle.prototype.animate = function() {
      var _this = this;
      return new Effect.Opacity(this._self.id, {
        from: 0,
        to: 0.9,
        afterFinish: function() {
          return new Effect.Opacity(_this._self.id, {
            from: 0.9,
            to: 0
          });
        }
      });
    };

    Circle.prototype.hide = function() {
      return this._self.setStyle({
        visibility: "hidden"
      });
    };

    Circle.prototype.show = function() {
      return this._self.setStyle({
        visibility: "visible"
      });
    };

    return Circle;

  })();

  window.Experience = Experience = (function() {

    function Experience() {}

    Experience.prototype.start = function() {
      return $$(".experience").first().addClassName("experience-current");
    };

    return Experience;

  })();

  window.App = App = (function() {

    function App() {
      this.onhoverColor = "#484846";
      this.offhoverColor = "#C4C4BB";
      this.selectedPage = null;
      this.loadingCircles = new LoadingCircles;
      this.loadingCircles.hide();
    }

    App.prototype.setSelectedPage = function(link) {
      return this.selectedPage = link;
    };

    App.prototype.highlightSelectedPage = function() {
      var a, link, links, portfolio, _i, _len, _results;
      portfolio = $("portfolio-items");
      links = portfolio.getElementsByTagName("li");
      _results = [];
      for (_i = 0, _len = links.length; _i < _len; _i++) {
        link = links[_i];
        a = link.getElementsByTagName("a")[0];
        a.setAttribute("style", "color: " + this.offhoverColor);
        if (this.selectedPage) {
          _results.push(this.selectedPage.setAttribute("style", "color: " + this.onhoverColor));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    App.prototype.start = function() {
      var a, l, listItem, listItems, p, __this, _i, _j, _len, _len1, _results,
        _this = this;
      p = $("portfolio-items");
      listItems = p.getElementsByTagName("li");
      __this = this;
      for (_i = 0, _len = listItems.length; _i < _len; _i++) {
        listItem = listItems[_i];
        listItem.onclick = function() {
          var a, stateObj;
          __this.loadingCircles.animate();
          a = this.getElementsByTagName("a")[0];
          __this.setSelectedPage(a);
          __this.highlightSelectedPage;
          stateObj = {
            id: a.id
          };
          console.log(a.href);
          return history.pushState(stateObj, "", a.href);
        };
        listItem.onmouseover = function() {
          var a, l, links, portfolio, _j, _len1;
          portfolio = $("portfolio-items");
          links = portfolio.getElementsByTagName("li");
          for (_j = 0, _len1 = listItems.length; _j < _len1; _j++) {
            l = listItems[_j];
            a = l.getElementsByTagName("a")[0];
            a.setAttribute("style", "color: " + __this.offhoverColor);
          }
          a = this.getElementsByTagName("a")[0];
          return a.setAttribute("style", "color: " + __this.onhoverColor);
        };
        listItem.onmouseout = function() {
          return _this.highlightSelectedPage();
        };
      }
      window.onpopstate = function(event) {
        var a, url;
        _this.loadingCircles.animate();
        url;

        url = location.href === '/' ? location.origin + '/about' : location.href;
        new Ajax.Request(url, {
          method: 'get',
          onSuccess: function() {
            return _this.loadingCircles.hide();
          }
        });
        if (event.state) {
          a = $(event.state.id);
          _this.setSelectedPage(a);
          return _this.highlightSelectedPage;
        }
      };
      if (!this.selectedPage) {
        p = $("portfolio-items");
        l = p.getElementsByTagName("li");
        _results = [];
        for (_j = 0, _len1 = listItems.length; _j < _len1; _j++) {
          listItem = listItems[_j];
          a = listItem.getElementsByTagName("a")[0];
          if (a.href === location.href) {
            this.setSelectedPage(a);
            _results.push(this.highlightSelectedPage);
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      }
    };

    return App;

  })();

}).call(this);
